apply plugin: 'com.android.application'
apply plugin: 'android-aspectjx'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        //添加如下配置就OK了
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    //配置签名文件
    signingConfigs {
        release {
            try {
                storeFile file("../kestore/Scetia_Pro.jks")
                storePassword "xieshi123"
                keyAlias "xieshi123"
                keyPassword "xieshi123"
                v1SigningEnabled true
                v2SigningEnabled true
            } catch (ex) {
                throw new Exception("签名用户名或密码错误${ex.message}")
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            // 移除无用的resource文件
            shrinkResources false
            //是否优化zip
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if(buildType.name=="release"){
                outputFileName = "Scetia.Pro" +"_v" + defaultConfig.versionName  + ".apk"
            }
        }
        if(variant.buildType.name=="release"){
            variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + File.separator + "output")
        }

    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    aspectjx {
        exclude 'com.squareup.leakcanary'
    }


}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation rootProject.ext.dependencies.photoview
    implementation rootProject.ext.dependencies.supportV4
    implementation rootProject.ext.dependencies.flowlayout
    implementation rootProject.ext.dependencies.tbs
    implementation rootProject.ext.dependencies.updateUtilsSDK2
    implementation rootProject.ext.dependencies.permissionGood
    implementation rootProject.ext.dependencies.pulltorefreash
    implementation rootProject.ext.dependencies.arouter
    annotationProcessor rootProject.ext.annationProcess.butterknifAnnationProcess
    annotationProcessor rootProject.ext.annationProcess.glideAnnationProcess
    annotationProcessor rootProject.ext.annationProcess.arouterProcessorr
    testImplementation rootProject.ext.testJunit
    androidTestImplementation rootProject.ext.androidTest
    implementation project(':lSUIKit')
    implementation project(':lib_base')
    implementation project(':lib_network')
    implementation project(':library')
    implementation project(':lib_common')
    implementation project(':lib_map')
    //如果需要建设用沙功能在这里引入组件即可使用
    //implementation project(':app_sand')
    implementation files('libs/uhfreaderapi.jar')
    compile files('libs/zbar.jar')
    compile files('libs/ksoap2-android-assembly-3.1.0-jar-with-dependencies.jar')
    //检测内存泄漏的工具
    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.3'

}
